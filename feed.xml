<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" xml:lang="en"><generator uri="https://jekyllrb.com/" version="4.3.3">Jekyll</generator><link href="https://cstheory-georgetown.github.io/feed.xml" rel="self" type="application/atom+xml"/><link href="https://cstheory-georgetown.github.io/" rel="alternate" type="text/html" hreflang="en"/><updated>2024-08-21T02:48:06+00:00</updated><id>https://cstheory-georgetown.github.io/feed.xml</id><title type="html">Theory @ Georgetown</title><subtitle>A simple, whitespace theme for academics. Based on [*folio](https://github.com/bogoli/-folio) design. </subtitle><entry><title type="html">Online Aggregation Problems with Delay</title><link href="https://cstheory-georgetown.github.io/blog/2024/william-umboh/" rel="alternate" type="text/html" title="Online Aggregation Problems with Delay"/><published>2024-01-12T15:59:00+00:00</published><updated>2024-01-12T15:59:00+00:00</updated><id>https://cstheory-georgetown.github.io/blog/2024/william-umboh</id><content type="html" xml:base="https://cstheory-georgetown.github.io/blog/2024/william-umboh/"><![CDATA[<h3 id="speaker">Speaker</h3> <p><a href="https://williamumboh.com">William Umboh</a> January 12, 2024.</p> <h3 id="abstract">Abstract</h3> <p>In the traditional model of online algorithms, requests arrive over time and each request has to be served immediately by the algorithm on arrival. Recently, there has been a lot of interest in online problems with delay where requests can be delayed at some cost and served together in batches. In particular, the main algorithmic challenge is in balancing the delay cost and the economies-of-scale of serving requests in batches. In this talk, we will survey recent advances in a rich subclass of online problems with delay that generalize classic online problems such as TCP Acknowledgement.</p>]]></content><author><name></name></author><category term="spring-2024"/><category term="distributed"/><category term="algorithms"/><summary type="html"><![CDATA[William Umboh]]></summary></entry><entry><title type="html">Hardness Condensation and Log Approximate Rank Conjecture</title><link href="https://cstheory-georgetown.github.io/blog/2023/artur-riaznov/" rel="alternate" type="text/html" title="Hardness Condensation and Log Approximate Rank Conjecture"/><published>2023-10-20T15:59:00+00:00</published><updated>2023-10-20T15:59:00+00:00</updated><id>https://cstheory-georgetown.github.io/blog/2023/artur-riaznov</id><content type="html" xml:base="https://cstheory-georgetown.github.io/blog/2023/artur-riaznov/"><![CDATA[<h3 id="speaker">Speaker</h3> <p><a href="https://tunyash.github.io">Artur Riazanov</a> October 20, 2023.</p> <h3 id="abstract">Abstract</h3> <p>Can a function f: {0,1}^n -&gt; {0,1} of query complexity k « n be restricted to O(k) variables such that its query complexity remains to be Omega(k)? That is, can query complexity be condensed via restriction? We study this question for query and communication complexity. On the negative side, we show that query complexity can not be condensed. In this talk, however, I will focus on a positive result in this direction: a function Sink o XOR that was used to falsify the log approximate rank conjecture (LARC) can be condensed in the sense above. The condensation is itself a stronger counterexample to LARC which was sought by Chattopadhyay, Garg, and Sherif (2021). Based on the joint work with Mika Göös, Ilan Newman, and Dmitry Sokolov.</p>]]></content><author><name></name></author><category term="fall-2023"/><category term="query"/><category term="algorithms"/><summary type="html"><![CDATA[Artur Riazanov]]></summary></entry><entry><title type="html">Depth Tradeoffs for Clique and Connectivity</title><link href="https://cstheory-georgetown.github.io/blog/2023/ben-rossman/" rel="alternate" type="text/html" title="Depth Tradeoffs for Clique and Connectivity"/><published>2023-10-06T15:59:00+00:00</published><updated>2023-10-06T15:59:00+00:00</updated><id>https://cstheory-georgetown.github.io/blog/2023/ben-rossman</id><content type="html" xml:base="https://cstheory-georgetown.github.io/blog/2023/ben-rossman/"><![CDATA[<h3 id="speaker">Speaker</h3> <p><a href="https://users.cs.duke.edu/~br148/">Ben Rossman</a> October 6, 2023.</p> <h3 id="abstract">Abstract</h3> <p>This talk will give an overview of size-depth tradeoffs for the important k-CLIQUE and DISTANCE-k CONNECTIVITY problems. In particular, I will discuss recent lower bounds for AC0 circuits and formulas that were obtained – via a novel “lifting” technique – from tradeoffs in the parameters of simpler combinatorial objects (e.g. subgraph coverings of the order-k path graph). In the talk, I will explain the underlying combinatorial tradeoffs; say a few words about lifting technique; and discuss the big-picture questions of P vs NP and NC1 vs L that motivate this work.</p>]]></content><author><name></name></author><category term="fall-2023"/><category term="distributed"/><category term="algorithms"/><summary type="html"><![CDATA[Ben Rossman]]></summary></entry><entry><title type="html">Criticality of AC0-formulae</title><link href="https://cstheory-georgetown.github.io/blog/2023/prahladh-harsha/" rel="alternate" type="text/html" title="Criticality of AC0-formulae"/><published>2023-04-17T15:59:00+00:00</published><updated>2023-04-17T15:59:00+00:00</updated><id>https://cstheory-georgetown.github.io/blog/2023/prahladh-harsha</id><content type="html" xml:base="https://cstheory-georgetown.github.io/blog/2023/prahladh-harsha/"><![CDATA[<h3 id="speaker">Speaker</h3> <p><a href="https://www.tcs.tifr.res.in/~prahladh/">Prahladh Harsha</a> April 17, 2023.</p> <h3 id="abstract">Abstract</h3> <p>Hastad’s celebrated switching lemma gives inverse-exponential bounds (In terms of t) on the probability that an k-DNF when hit by a p-restriction requires decision-trees of depth larger than t. The switching lemma has proved to be extremely powerful, since its discovery, leading to optimal size lower bounds for AC0-circuits [Hastad 1986] and AC0 formulae [Rossman 2015] against the parity function</p> <p>More recently, the search for optimal correlation bounds against parity led to the notion of criticality [Rossman 2019]. The criticality of a Boolean function f : {0, 1}^n → {0, 1} is the minimum λ ≥ 1 such that for all positive integers t, we have</p> <table> <tbody> <tr> <td>Pr_{ρ∼Rp} [ DT_depth (f</td> <td>_ρ) ≥ t ] ≤ (pλ)^t</td> </tr> </tbody> </table> <p>Hastad (2014) proved that size S and depth (d+1) AC0-circuits have criticality at most O((log S)^d) leading to optimal correlation bounds of AC0-circuits against parity. Rossman (2019) subsequently proved that size S and depth (d+1) AC0-formulae, which are regular (ie., all gates of the same depth have equal fan-in) have criticality at most O(((log S)/d)^d).</p> <p>In this work, we strengthen and unify all the above results by proving that any (not necessarily regular) AC0-formula of size S and depth (d+1) has criticality at most O(((log S)/d)^d). This criticality bound implies tight correlation bounds against parity, tight Fourier concentration results and improved #SAT algorithm for AC0-formulae.</p> <p>[Joint work with Tulasimohan Molli and Ashutosh Shankar]</p>]]></content><author><name></name></author><category term="spring-2023"/><category term="circuits"/><category term="complexity"/><summary type="html"><![CDATA[Prahladh Harsha]]></summary></entry><entry><title type="html">Quantum Divide and Conquer</title><link href="https://cstheory-georgetown.github.io/blog/2023/matt-kovacs-deak/" rel="alternate" type="text/html" title="Quantum Divide and Conquer"/><published>2023-04-14T15:59:00+00:00</published><updated>2023-04-14T15:59:00+00:00</updated><id>https://cstheory-georgetown.github.io/blog/2023/matt-kovacs-deak</id><content type="html" xml:base="https://cstheory-georgetown.github.io/blog/2023/matt-kovacs-deak/"><![CDATA[<h3 id="speaker">Speaker</h3> <p><a href="https://quics.umd.edu/people/matt-kovacs-deak">Matt Kovacs-Deak</a> April 14, 2023.</p> <h3 id="abstract">Abstract</h3> <p>The divide-and-conquer framework, used extensively in classical algorithm design, recursively breaks a problem of size n into smaller subproblems (say, a many copies of size n/b each), along with some auxiliary work of cost T_aux(n), to give a recurrence relation T(n) ≤ a T(n/b) + T_aux(n) for the classical complexity T(n). In this talk I will describe a quantum divide-and-conquer framework that, in certain cases, yields an analogous recurrence relation Q(n) ≤ a sqrt(Q(n/b)) + O(Q_aux(n)) that characterizes the quantum query complexity Q(n). Using this framework near-optimal quantum query complexities can be derived for various string problems, such as (i) recognizing regular languages; (ii) decision versions of String Rotation and String Suffix; and natural parameterized versions of (iii) Longest Increasing Subsequence and (iv) Longest Common Subsequence.</p>]]></content><author><name></name></author><category term="spring-2023"/><category term="quantum"/><category term="algorithms"/><summary type="html"><![CDATA[Matt Kovacs-Deak]]></summary></entry><entry><title type="html">Quantum speedups related to the welded-trees problem</title><link href="https://cstheory-georgetown.github.io/blog/2023/shankar-balasubramnian/" rel="alternate" type="text/html" title="Quantum speedups related to the welded-trees problem"/><published>2023-03-31T15:59:00+00:00</published><updated>2023-03-31T15:59:00+00:00</updated><id>https://cstheory-georgetown.github.io/blog/2023/shankar-balasubramnian</id><content type="html" xml:base="https://cstheory-georgetown.github.io/blog/2023/shankar-balasubramnian/"><![CDATA[<h3 id="speaker">Speaker</h3> <p><a href="https://physics.mit.edu/faculty/shankar-balasubramanian/">Shankar Balasubramanian</a> March 31, 2023.</p> <h3 id="abstract">Abstract</h3> <p>There are few known exponential speedups for quantum algorithms and these tend to fall into even fewer families. One speedup that has mostly resisted generalization is the use of quantum walks to traverse the welded-tree graph, due to Childs, Cleve, Deotto, Farhi, Gutmann, and Spielman. We show how to generalize this to a large class of hierarchical graphs in which the vertices are grouped into ``supervertices’’ which are arranged according to a d-dimensional lattice. Supervertices can have different sizes, and edges between supervertices correspond to random connections between their constituent vertices. The hitting times of quantum walks on these graphs are mapped to the localization properties of zero modes in certain disordered tight binding Hamiltonians. The speedups range from superpolynomial to exponential, depending on the underlying dimension and the random graph model.</p> <p>This is work joint with Tongyang Li and Aram Harrow.</p>]]></content><author><name></name></author><category term="spring-2023"/><category term="quantum"/><summary type="html"><![CDATA[Shankar Balasubramanian]]></summary></entry><entry><title type="html">Quantum Pseudoentanglement</title><link href="https://cstheory-georgetown.github.io/blog/2023/soumik-ghosh/" rel="alternate" type="text/html" title="Quantum Pseudoentanglement"/><published>2023-03-24T15:59:00+00:00</published><updated>2023-03-24T15:59:00+00:00</updated><id>https://cstheory-georgetown.github.io/blog/2023/soumik-ghosh</id><content type="html" xml:base="https://cstheory-georgetown.github.io/blog/2023/soumik-ghosh/"><![CDATA[<h3 id="speaker">Speaker</h3> <p><a href="https://soumikghosh23.github.io">Soumik Ghosh</a> March 24, 2023.</p> <h3 id="abstract">Abstract</h3> <p>Quantum pseudorandom states are efficiently constructable states which nevertheless masquerade as Haar-random states to poly-time observers. First defined by Ji, Liu and Song, such states have found a number of applications ranging from cryptography to the AdS/CFT correspondence. A fundamental question is exactly how much entanglement is required to create such states. Haar-random states, as well as t-designs for t≥2, exhibit near-maximal entanglement. Here we provide the first construction of pseudorandom states with only polylogarithmic entanglement entropy across an equipartition of the qubits, which is the minimum possible. Our construction can be based on any one-way function secure against quantum attack. We additionally show that the entanglement in our construction is fully “tunable”, in the sense that one can have pseudorandom states with entanglement Θ(f(n)) for any desired functionω(logn)≤f(n)≤O(n).</p> <p>More fundamentally, our work calls into question to what extent entanglement is a “feelable” quantity of quantum systems. Inspired by recent work of Gheorghiu and Hoban, we define a new notion which we call “pseudoentanglement”, which are ensembles of efficiently constructable quantum states which hide their entanglement entropy. We show such states exist in the strongest form possible while simultaneously being pseudorandom states. We also describe diverse applications of our result from entanglement distillation to property testing to quantum gravity.</p>]]></content><author><name></name></author><category term="spring-2023"/><category term="Quantum"/><summary type="html"><![CDATA[Soumik Ghosh]]></summary></entry><entry><title type="html">Approximating CSPs in the streaming setting</title><link href="https://cstheory-georgetown.github.io/blog/2023/santoshini-velusamy/" rel="alternate" type="text/html" title="Approximating CSPs in the streaming setting"/><published>2023-03-03T15:59:00+00:00</published><updated>2023-03-03T15:59:00+00:00</updated><id>https://cstheory-georgetown.github.io/blog/2023/santoshini-velusamy</id><content type="html" xml:base="https://cstheory-georgetown.github.io/blog/2023/santoshini-velusamy/"><![CDATA[<h3 id="speaker">Speaker</h3> <p><a href="https://scholar.harvard.edu/santhoshiniv/home">Santhoshini Velusamy</a> March 03, 2023.</p> <h3 id="abstract">Abstract</h3> <p>Constraint satisfaction problems (CSPs) are ubiquitous in computer science and encompass optimization problems such as Max-CUT, Max-DICUT, Max-k-SAT, Max-q-Coloring, Unique Games, etc. Until recently, Max-CUT and a few Max-2CSPs were the only CSPs studied in the streaming setting. The main focus of my talk will be the following dichotomy theorem: For every CSP, there is a constant ⍺ such that the CSP is ⍺-approximable in polylogarithmic space by a linear sketching algorithm and any sketching algorithm that beats ⍺-approximation requires polynomial space. I will also briefly discuss latest works which address some of the gaps in the above dichotomy theorem, and conclude with some interesting open problems in this area.</p> <p>Based on joint works with Chi-Ning Chou, Alexander Golovnev, Raghuvansh Saxena, Madhu Sudan, Noah Singer, and Ameya Velingker that appeared in STOC, FOCS, SODA, and APPROX.</p>]]></content><author><name></name></author><category term="spring-2023"/><category term="streaming"/><category term="complexity"/><category term="algorithms"/><summary type="html"><![CDATA[Santhoshini Velusamy]]></summary></entry><entry><title type="html">Foundations of Lattice-based Cryptography</title><link href="https://cstheory-georgetown.github.io/blog/2023/rajendra-kumar/" rel="alternate" type="text/html" title="Foundations of Lattice-based Cryptography"/><published>2023-02-24T15:59:00+00:00</published><updated>2023-02-24T15:59:00+00:00</updated><id>https://cstheory-georgetown.github.io/blog/2023/rajendra-kumar</id><content type="html" xml:base="https://cstheory-georgetown.github.io/blog/2023/rajendra-kumar/"><![CDATA[<h3 id="speaker">Speaker</h3> <p><a href="https://sites.google.com/view/rajendrak/home">Rajendra Kumar</a> February 24, 2023.</p> <h3 id="abstract">Abstract</h3> <p>Public key cryptography is essential for internet security, and RSA and Diffie-Hellman are the most widely used public-key cryptosystems for internet traffic. However, recent progress in building quantum computers threatens RSA and Diffie-Hellman’s security, as they are vulnerable to quantum adversaries. To address this, organizations like the National Institute of Standards and Technology (NIST) and the European Telecommunications Standards Institute (ETSI) have started standardizing and deploying cryptosystems that are secure against quantum attacks. Recently, NIST has chosen Kyber and Dilithium, lattice-based candidates, as primary algorithms for security against quantum adversaries. The security of these cryptosystems crucially relies on the assumption that the best-known algorithms for the lattice problems cannot be significantly improved.</p> <p>In this talk, I will discuss the connections between the security of lattice-based cryptosystems and the hardness of lattice problems. I will talk about classical and quantum algorithms for lattice problems. I will also discuss the works on the fine-grained security of lattice-based Crypto.</p>]]></content><author><name></name></author><category term="spring-2023"/><category term="circuits"/><category term="cryptography"/><category term="lattices"/><summary type="html"><![CDATA[Rajendra Kumar]]></summary></entry><entry><title type="html">Redundancy and Resilience in Distributed Optimization</title><link href="https://cstheory-georgetown.github.io/blog/2023/shuo-liu/" rel="alternate" type="text/html" title="Redundancy and Resilience in Distributed Optimization"/><published>2023-02-24T15:59:00+00:00</published><updated>2023-02-24T15:59:00+00:00</updated><id>https://cstheory-georgetown.github.io/blog/2023/shuo-liu</id><content type="html" xml:base="https://cstheory-georgetown.github.io/blog/2023/shuo-liu/"><![CDATA[<h3 id="speaker">Speaker</h3> <p><a href="https://tenpages.github.io/about/">Shuo Liu</a> February 24, 2023.</p> <h3 id="abstract">Abstract</h3> <p>Distributed optimization problems have gained significant attention in recent years, where each agent in the system has a local cost function, and the goal is to design an algorithm that allows the agents to collaboratively minimize the aggregate cost over all the agents. Distributed machine learning is an important application of this problem.</p> <p>We consider the case where the system may contain faulty agents and/or slow agents. We will discuss the impact of faulty or slow agents on distributed optimization, and how to utilize redundancy in cost functions to achieve resilient distributed optimization (RDO). We define a way of measuring the resilience of optimization algorithms, namely (f,r; epsilon)-resilience, and a notion of redundancy, namely (f,r; epsilon)-redundancy. We demonstrate the necessity of (f,r; epsilon)-redundancy, and present a practical algorithm for resilient distributed optimization.</p>]]></content><author><name></name></author><category term="spring-2023"/><category term="distributed"/><category term="algorithms"/><summary type="html"><![CDATA[Shuo Liu]]></summary></entry></feed>